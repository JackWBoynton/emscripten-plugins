
macro(detect_plugins)
  file(GLOB PLUGINS_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/plugins/*")

  foreach(PLUGIN_DIR ${PLUGINS_DIRS})
    if(EXISTS "${PLUGIN_DIR}/CMakeLists.txt")
      get_filename_component(PLUGIN_NAME ${PLUGIN_DIR} NAME)
      list(APPEND PLUGINS ${PLUGIN_NAME})
    endif()
  endforeach()

  foreach(PLUGIN_NAME ${PLUGINS})
    message(STATUS "Enabled plugin '${PLUGIN_NAME}'")
  endforeach()
endmacro()



function(detect_and_add_plugins)
 if (EMSCRIPTEN)
    set(SUBDIR "emscripten")
  elseif(APPLE)
    set(SUBDIR "macos_arm64")
  elseif(UNIX)
    if(CMAKE_SYSTEM_PROCESSOR MATCHES "aarch64")
      set(SUBDIR "linux_arm64")
    else()
      set(SUBDIR "linux_x86_64")
    endif()
  elseif(WIN32)
    set(SUBDIR "windows")
  else()
    message(FATAL_ERROR "Unsupported platform")
  endif()

  detect_plugins()
  file(MAKE_DIRECTORY "plugins/")
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${SUBDIR}")
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${SUBDIR}")
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${SUBDIR}")

  foreach(plugin IN LISTS PLUGINS)
    message(STATUS "plugin ${plugin}")
    add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/plugins/${plugin}")
    if(TARGET ${plugin})
      set_target_properties(${plugin} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${SUBDIR}")
      set_target_properties(${plugin} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${SUBDIR}")
      message(STATUS "plugin install location: ${PLUGINS_INSTALL_LOCATION}")

      if(WIN32)
        get_target_property(target_type ${plugin} TYPE)
        if(target_type STREQUAL "SHARED_LIBRARY")
          install(TARGETS ${plugin} RUNTIME DESTINATION ${PLUGINS_INSTALL_LOCATION}/${SUBDIR})
        else()
          install(TARGETS ${plugin} LIBRARY DESTINATION ${PLUGINS_INSTALL_LOCATION}/${SUBDIR})
        endif()
      else()
        install(TARGETS ${plugin} LIBRARY DESTINATION ${PLUGINS_INSTALL_LOCATION}/${SUBDIR})
        message(STATUS "Installed ${plugin} to ${PLUGINS_INSTALL_LOCATION}")
      endif()


    else()
      message(WARNING "Plugin ${plugin} target not found")
    endif()
  endforeach()
endfunction()
